# Bibliograph configuration file
# Written in TOML (https://github.com/toml-lang/toml)

[database]
# database.type
# the database type. currently, only mysql is supported and tested. Since
# the PDO abstraction layer is used, it will be easy to support other backends.
type = "mysql"

# database.host
# the database host, usually localhost
host = "localhost"

# database.port
# the port on which the database listens for requests, ususally 3306
port = "3306"

# database.adminname and database.adminpassw
# The name and password of the database user. Both "normal" user and admin must be the same for the moment.
# This user needs ALL rights in the databases named below. If you want to make backup snapshots, it also
# needs the global RELOAD privilege
adminname  = "bibliograph"
adminpassw = "boulanger-2012"
username  = "%$database.adminname%"
userpassw = "%$database.adminpassw%"

# database.admindb
# The name of the database holding all the tables with global and
# administrative information. Must exist before the application is started
admindb = "{{database}}"

# database.userdb
# The name of the databases that contains the user data.
# Can be the same as database.admindb, but if you have access
# to more than one database, is recommended to keep a separate
# database for this. Must exist before the application is started.
userdb = "{{database}}"

# database.tmpdb
# The name of the database holding all the tables with temporary data.
# Can be the same as database.admindb, but if you have access
# to more than one database, is recommended to keep a separate
# database for this. Must exist before the application is started.
tmp_db = "{{database}}"

# database.tableprefix
# A global prefix for all tables that are created, which makes
# it possible to keep the data of several applications in one
# database. you can omit this if no prefix is needed.
tableprefix = ""

# database.encoding
# The default encoding scheme of the database. It is recommended
# to use the default utf8.
encoding = "utf8"

[email]
# The email address of the administrator of this particular installation.
# Must be set, otherwise setup process will not complete
admin = "boulanger@rewi.hu-berlin.de"

# The email address of the developer of the application. Don't change
# this unless you are a developer
developer = "info@bibliograph.org"

# Uncomment and configure the following values if you want Yii::error() messages
# to be sent to a specific address.
# errors_from = "%$email.admin%"
# errors_to =  "%$email.developer%"
# errors_subject = "Bibliograph error at bibliograph.rewi.hu-berlin.de"

[ldap]
# whether ldap authentication is enabled, values: yes/no
enabled = true

# whether to use ldap groups. values yes/no
use_groups = true

# the host of the ldap server
host = "x8.rewi.hu-berlin.de"

# the port listening for ldap connections
port = "389"

# the dn of user that can bind to the LDAP server to do searches
bind_dn = "uid=boulanger"

# the password of that user
bind_password = "ful!bri"

# base dn to which the user name is added for authentication
user_base_dn = "ou=people,dc=rewi,dc=hu-berlin,dc=de"

# attribute name that is used for the user name, usually uid.
user_id_attr = "uid"

# base dn of group data
group_base_dn = "ou=groups,dc=rewi,dc=hu-berlin,dc=de"

# attribute for members of the group, was called 'member_id_attr' before
group_member_attr = "memberUid"

# attribute for the group name, usually description or displayName
group_name_attr = "description"

# if the LDAP database only stores the user name part of the users'
# e-mail address, you can provide the domain part here
mail_domain = "rewi.hu-berlin.de"

[access]
# whether users are attached to roles directly (true) or have roles
# dependent on the group they belong to (false), i.e. users can have
# different roles in different groups. You can still define global
# roles when using group-specific roles. On the other hand, if you set this
# value to true, group-specific roles will be ignored.
global_roles_only = false

# whether authentication should be possible only via https.
# this option gets set as a read-only configuration value
# (access.enforce_https_login) also which is available on the
# client.
enforce_https_login = true

[service]
# service.event_transport
# Whether the server response should contain messages and events
# for the qooxdoo application
# values are on/off
event_transport = true